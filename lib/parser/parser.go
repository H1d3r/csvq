// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const LATERAL = 57406
const UNION = 57407
const INTERSECT = 57408
const EXCEPT = 57409
const ALL = 57410
const ANY = 57411
const EXISTS = 57412
const IN = 57413
const AND = 57414
const OR = 57415
const NOT = 57416
const BETWEEN = 57417
const LIKE = 57418
const IS = 57419
const NULL = 57420
const DISTINCT = 57421
const WITH = 57422
const RANGE = 57423
const UNBOUNDED = 57424
const PRECEDING = 57425
const FOLLOWING = 57426
const CURRENT = 57427
const ROW = 57428
const CASE = 57429
const IF = 57430
const ELSEIF = 57431
const WHILE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const DO = 57436
const END = 57437
const DECLARE = 57438
const CURSOR = 57439
const FOR = 57440
const FETCH = 57441
const OPEN = 57442
const CLOSE = 57443
const DISPOSE = 57444
const PREPARE = 57445
const NEXT = 57446
const PRIOR = 57447
const ABSOLUTE = 57448
const RELATIVE = 57449
const SEPARATOR = 57450
const PARTITION = 57451
const OVER = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const CONTINUE = 57455
const BREAK = 57456
const EXIT = 57457
const ECHO = 57458
const PRINT = 57459
const PRINTF = 57460
const SOURCE = 57461
const EXECUTE = 57462
const CHDIR = 57463
const PWD = 57464
const RELOAD = 57465
const REMOVE = 57466
const SYNTAX = 57467
const TRIGGER = 57468
const FUNCTION = 57469
const AGGREGATE = 57470
const BEGIN = 57471
const RETURN = 57472
const IGNORE = 57473
const WITHIN = 57474
const VAR = 57475
const SHOW = 57476
const TIES = 57477
const NULLS = 57478
const ROWS = 57479
const ONLY = 57480
const CSV = 57481
const JSON = 57482
const FIXED = 57483
const LTSV = 57484
const JSON_TABLE = 57485
const JSON_ROW = 57486
const SUBSTRING = 57487
const COUNT = 57488
const JSON_OBJECT = 57489
const AGGREGATE_FUNCTION = 57490
const LIST_FUNCTION = 57491
const ANALYTIC_FUNCTION = 57492
const FUNCTION_NTH = 57493
const FUNCTION_WITH_INS = 57494
const COMPARISON_OP = 57495
const STRING_OP = 57496
const SUBSTITUTION_OP = 57497
const UMINUS = 57498
const UPLUS = 57499

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2733

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 216,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	89, 26,
	91, 26,
	93, 26,
	95, 26,
	158, 26,
	-2, 235,
	-1, 33,
	1, 78,
	89, 78,
	91, 78,
	93, 78,
	95, 78,
	158, 78,
	-2, 247,
	-1, 112,
	17, 216,
	19, 216,
	22, 216,
	24, 216,
	-2, 1,
	-1, 114,
	167, 306,
	-2, 216,
	-1, 123,
	65, 184,
	66, 184,
	67, 184,
	-2, 196,
	-1, 161,
	1, 122,
	89, 122,
	91, 122,
	93, 122,
	95, 122,
	158, 122,
	-2, 229,
	-1, 162,
	1, 163,
	89, 163,
	91, 163,
	93, 163,
	95, 163,
	158, 163,
	-2, 235,
	-1, 167,
	1, 156,
	89, 156,
	91, 156,
	93, 156,
	95, 156,
	158, 156,
	-2, 235,
	-1, 168,
	1, 157,
	89, 157,
	91, 157,
	93, 157,
	95, 157,
	158, 157,
	-2, 235,
	-1, 169,
	1, 158,
	89, 158,
	91, 158,
	93, 158,
	95, 158,
	158, 158,
	-2, 235,
	-1, 170,
	1, 161,
	89, 161,
	91, 161,
	93, 161,
	95, 161,
	158, 161,
	-2, 229,
	-1, 171,
	1, 162,
	89, 162,
	91, 162,
	93, 162,
	95, 162,
	158, 162,
	-2, 235,
	-1, 174,
	1, 169,
	89, 169,
	91, 169,
	93, 169,
	95, 169,
	158, 169,
	-2, 229,
	-1, 175,
	1, 170,
	89, 170,
	91, 170,
	93, 170,
	95, 170,
	158, 170,
	-2, 235,
	-1, 232,
	89, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 254,
	166, 355,
	-2, 480,
	-1, 255,
	166, 356,
	-2, 481,
	-1, 256,
	166, 357,
	-2, 482,
	-1, 257,
	166, 358,
	-2, 483,
	-1, 289,
	4, 144,
	135, 144,
	136, 144,
	137, 144,
	139, 144,
	140, 144,
	141, 144,
	142, 144,
	-2, 235,
	-1, 290,
	4, 145,
	135, 145,
	136, 145,
	137, 145,
	139, 145,
	140, 145,
	141, 145,
	142, 145,
	-2, 235,
	-1, 300,
	1, 174,
	89, 174,
	91, 174,
	93, 174,
	95, 174,
	158, 174,
	-2, 235,
	-1, 308,
	95, 4,
	-2, 216,
	-1, 317,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	153, 0,
	159, 0,
	-2, 276,
	-1, 318,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	153, 0,
	159, 0,
	-2, 278,
	-1, 327,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	153, 0,
	159, 0,
	-2, 288,
	-1, 377,
	95, 1,
	-2, 216,
	-1, 393,
	54, 499,
	-2, 416,
	-1, 435,
	1, 80,
	89, 80,
	91, 80,
	93, 80,
	95, 80,
	158, 80,
	-2, 235,
	-1, 436,
	1, 81,
	89, 81,
	91, 81,
	93, 81,
	95, 81,
	158, 81,
	-2, 229,
	-1, 437,
	1, 82,
	89, 82,
	91, 82,
	93, 82,
	95, 82,
	158, 82,
	-2, 235,
	-1, 438,
	1, 83,
	89, 83,
	91, 83,
	93, 83,
	95, 83,
	158, 83,
	-2, 229,
	-1, 439,
	1, 149,
	89, 149,
	91, 149,
	93, 149,
	95, 149,
	158, 149,
	-2, 229,
	-1, 440,
	1, 150,
	89, 150,
	91, 150,
	93, 150,
	95, 150,
	158, 150,
	-2, 235,
	-1, 441,
	1, 151,
	89, 151,
	91, 151,
	93, 151,
	95, 151,
	158, 151,
	-2, 229,
	-1, 442,
	1, 152,
	89, 152,
	91, 152,
	93, 152,
	95, 152,
	158, 152,
	-2, 235,
	-1, 445,
	1, 117,
	89, 117,
	91, 117,
	93, 117,
	95, 117,
	158, 117,
	168, 117,
	-2, 235,
	-1, 450,
	1, 414,
	89, 414,
	91, 414,
	93, 414,
	95, 414,
	158, 414,
	-2, 235,
	-1, 457,
	1, 175,
	89, 175,
	91, 175,
	93, 175,
	95, 175,
	158, 175,
	-2, 235,
	-1, 482,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	153, 0,
	159, 0,
	-2, 289,
	-1, 515,
	95, 1,
	-2, 216,
	-1, 522,
	91, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 525,
	1, 206,
	52, 206,
	80, 206,
	89, 206,
	91, 206,
	93, 206,
	95, 206,
	98, 206,
	138, 206,
	158, 206,
	167, 206,
	-2, 235,
	-1, 526,
	1, 211,
	89, 211,
	91, 211,
	93, 211,
	95, 211,
	98, 211,
	99, 211,
	158, 211,
	167, 211,
	-2, 235,
	-1, 561,
	167, 353,
	168, 353,
	-2, 229,
	-1, 603,
	89, 4,
	91, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 606,
	95, 4,
	-2, 216,
	-1, 607,
	95, 4,
	-2, 216,
	-1, 672,
	54, 499,
	-2, 375,
	-1, 693,
	17, 510,
	80, 510,
	166, 510,
	-2, 87,
	-1, 719,
	89, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 724,
	95, 4,
	-2, 216,
	-1, 725,
	95, 4,
	-2, 216,
	-1, 750,
	89, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 793,
	1, 95,
	89, 95,
	91, 95,
	93, 95,
	95, 95,
	158, 95,
	-2, 229,
	-1, 794,
	1, 96,
	89, 96,
	91, 96,
	93, 96,
	95, 96,
	158, 96,
	-2, 235,
	-1, 796,
	95, 6,
	-2, 216,
	-1, 802,
	167, 128,
	168, 128,
	-2, 235,
	-1, 807,
	95, 4,
	-2, 216,
	-1, 878,
	95, 6,
	-2, 216,
	-1, 879,
	95, 6,
	-2, 216,
	-1, 883,
	95, 4,
	-2, 216,
	-1, 887,
	91, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 932,
	89, 6,
	91, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 939,
	158, 62,
	-2, 235,
	-1, 981,
	89, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 984,
	95, 8,
	-2, 216,
	-1, 991,
	95, 6,
	-2, 216,
	-1, 994,
	89, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 1023,
	95, 6,
	-2, 216,
	-1, 1056,
	95, 6,
	-2, 216,
	-1, 1060,
	91, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 1062,
	89, 8,
	91, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1065,
	95, 8,
	-2, 216,
	-1, 1066,
	95, 8,
	-2, 216,
	-1, 1083,
	89, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1088,
	95, 8,
	-2, 216,
	-1, 1089,
	95, 8,
	-2, 216,
	-1, 1094,
	89, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 1099,
	95, 8,
	-2, 216,
	-1, 1114,
	95, 8,
	-2, 216,
	-1, 1118,
	91, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1147,
	89, 8,
	93, 8,
	95, 8,
	-2, 216,
}

const yyPrivate = 57344

const yyLast = 4036

var yyAct = [...]int{

	122, 21, 1113, 1084, 1125, 1055, 1112, 349, 89, 527,
	954, 982, 1054, 631, 115, 33, 952, 120, 953, 720,
	268, 27, 458, 186, 113, 881, 999, 187, 575, 882,
	755, 382, 514, 700, 383, 671, 695, 841, 465, 26,
	667, 650, 162, 464, 25, 163, 164, 421, 167, 168,
	169, 171, 591, 175, 594, 662, 388, 234, 237, 1,
	593, 554, 100, 238, 347, 443, 65, 449, 533, 243,
	538, 180, 172, 184, 537, 573, 513, 460, 3, 344,
	701, 221, 399, 129, 392, 249, 79, 247, 191, 260,
	504, 181, 183, 78, 68, 397, 137, 412, 140, 140,
	985, 143, 1036, 309, 541, 569, 542, 543, 544, 536,
	922, 923, 539, 21, 541, 180, 542, 543, 544, 536,
	101, 230, 539, 214, 920, 921, 213, 33, 292, 141,
	149, 214, 213, 123, 213, 233, 183, 236, 466, 185,
	492, 165, 472, 213, 298, 396, 252, 857, 858, 850,
	240, 26, 712, 713, 183, 789, 25, 684, 685, 289,
	290, 772, 771, 743, 130, 710, 126, 709, 694, 128,
	692, 125, 231, 1032, 127, 686, 682, 657, 300, 601,
	673, 74, 598, 93, 178, 310, 393, 178, 551, 490,
	3, 267, 411, 406, 314, 273, 1012, 310, 1025, 310,
	310, 1073, 1072, 1048, 265, 1047, 1046, 1045, 110, 248,
	324, 313, 1044, 1043, 261, 195, 676, 269, 101, 271,
	1018, 205, 204, 206, 207, 208, 130, 540, 361, 362,
	325, 280, 214, 21, 1017, 213, 1016, 1015, 475, 310,
	381, 1013, 74, 396, 252, 110, 1011, 33, 1009, 93,
	297, 102, 103, 104, 312, 254, 255, 256, 257, 403,
	205, 204, 206, 207, 208, 1008, 998, 325, 390, 997,
	979, 26, 339, 341, 976, 880, 25, 859, 918, 856,
	319, 822, 398, 563, 435, 437, 440, 442, 445, 123,
	821, 1031, 373, 445, 450, 820, 819, 818, 450, 450,
	817, 813, 457, 791, 788, 781, 780, 868, 773, 21,
	3, 391, 387, 132, 1062, 742, 740, 739, 738, 731,
	456, 727, 708, 33, 706, 693, 691, 636, 552, 404,
	427, 481, 629, 628, 470, 627, 614, 483, 484, 590,
	140, 408, 585, 272, 409, 416, 181, 183, 489, 102,
	103, 104, 507, 254, 255, 256, 257, 403, 448, 487,
	485, 414, 415, 417, 432, 454, 455, 418, 422, 374,
	428, 305, 503, 306, 505, 132, 476, 391, 21, 453,
	398, 134, 304, 1010, 132, 525, 526, 564, 961, 451,
	452, 960, 33, 959, 531, 958, 957, 956, 486, 928,
	912, 907, 904, 474, 138, 902, 478, 901, 560, 101,
	894, 892, 863, 477, 687, 633, 26, 500, 501, 340,
	183, 25, 359, 360, 610, 502, 183, 511, 572, 550,
	499, 498, 497, 369, 396, 252, 496, 518, 495, 494,
	493, 101, 434, 183, 532, 206, 207, 208, 433, 510,
	407, 138, 183, 133, 183, 3, 508, 509, 235, 229,
	588, 228, 218, 604, 217, 216, 565, 111, 556, 848,
	600, 419, 215, 223, 286, 683, 284, 932, 603, 112,
	274, 605, 574, 178, 367, 651, 1091, 581, 583, 248,
	905, 757, 655, 559, 558, 566, 568, 261, 570, 571,
	596, 567, 431, 903, 578, 611, 420, 759, 835, 746,
	900, 276, 826, 391, 632, 991, 21, 641, 652, 879,
	878, 796, 133, 21, 101, 967, 965, 183, 899, 898,
	33, 897, 746, 827, 896, 895, 823, 33, 816, 955,
	102, 103, 104, 656, 254, 255, 256, 257, 403, 756,
	618, 678, 219, 368, 26, 624, 625, 626, 220, 25,
	632, 26, 824, 524, 275, 679, 25, 647, 635, 653,
	616, 398, 102, 103, 104, 640, 105, 106, 107, 108,
	93, 970, 644, 825, 523, 547, 430, 1146, 1132, 1122,
	285, 639, 283, 3, 277, 278, 1121, 634, 1116, 445,
	3, 661, 450, 582, 21, 1102, 1101, 21, 21, 1093,
	670, 1075, 1069, 145, 669, 574, 1061, 1058, 33, 993,
	990, 33, 33, 689, 681, 1089, 718, 574, 680, 722,
	723, 989, 183, 943, 648, 574, 674, 931, 891, 741,
	688, 890, 885, 810, 809, 574, 749, 754, 690, 638,
	602, 519, 517, 1088, 1066, 102, 103, 104, 703, 105,
	106, 107, 108, 1114, 714, 531, 144, 758, 1065, 716,
	1115, 1057, 146, 984, 1114, 1056, 1099, 732, 733, 734,
	735, 737, 725, 101, 884, 762, 579, 736, 883, 516,
	724, 607, 606, 515, 1147, 308, 147, 619, 620, 621,
	622, 623, 1056, 752, 1023, 883, 794, 751, 807, 111,
	515, 769, 802, 379, 156, 157, 377, 760, 1118, 1094,
	21, 1083, 808, 785, 1060, 21, 21, 672, 994, 981,
	887, 750, 719, 522, 33, 232, 1149, 1096, 774, 33,
	33, 784, 805, 777, 775, 556, 1085, 811, 812, 996,
	574, 21, 632, 983, 381, 574, 753, 828, 721, 375,
	239, 786, 787, 779, 798, 33, 804, 203, 783, 770,
	799, 800, 778, 853, 1139, 1138, 596, 801, 1120, 1119,
	596, 154, 155, 158, 159, 1081, 488, 839, 950, 26,
	834, 949, 889, 888, 25, 183, 833, 21, 717, 1115,
	1057, 884, 516, 183, 1153, 1145, 183, 851, 21, 1110,
	832, 33, 1092, 1039, 102, 103, 104, 183, 105, 106,
	107, 108, 33, 866, 992, 865, 831, 748, 3, 1136,
	886, 1079, 947, 642, 1144, 1130, 1142, 1143, 1155, 201,
	210, 209, 200, 199, 202, 198, 1141, 1129, 1128, 1051,
	745, 1019, 763, 765, 74, 926, 266, 222, 223, 861,
	840, 1140, 844, 632, 909, 908, 630, 674, 924, 1108,
	632, 910, 364, 933, 870, 929, 363, 935, 939, 21,
	21, 183, 913, 914, 21, 946, 919, 1126, 21, 1037,
	986, 934, 98, 33, 33, 854, 263, 473, 33, 311,
	937, 860, 33, 74, 938, 74, 945, 1126, 944, 74,
	948, 413, 963, 74, 183, 963, 925, 366, 365, 964,
	962, 196, 195, 966, 329, 328, 574, 197, 205, 204,
	206, 207, 208, 21, 969, 632, 299, 782, 1106, 930,
	977, 971, 915, 936, 916, 1107, 674, 33, 1109, 74,
	262, 263, 264, 972, 845, 847, 870, 870, 672, 293,
	322, 99, 988, 1151, 321, 323, 1127, 287, 995, 668,
	875, 849, 963, 1002, 1003, 1004, 1005, 1006, 768, 974,
	1007, 975, 21, 1124, 1024, 21, 1127, 842, 843, 767,
	666, 574, 21, 665, 385, 21, 33, 808, 1041, 33,
	541, 183, 542, 543, 978, 987, 33, 384, 385, 33,
	870, 659, 660, 1001, 973, 664, 541, 1040, 542, 543,
	544, 386, 1042, 963, 21, 663, 830, 1049, 632, 534,
	1063, 1050, 241, 1053, 1000, 705, 917, 672, 33, 80,
	183, 696, 697, 698, 699, 704, 294, 101, 1064, 531,
	711, 1071, 875, 875, 702, 837, 838, 21, 1078, 870,
	632, 21, 1027, 21, 121, 1074, 21, 21, 1076, 870,
	1070, 33, 136, 252, 135, 33, 194, 33, 942, 814,
	33, 33, 803, 59, 21, 797, 1100, 795, 874, 21,
	21, 173, 1095, 422, 707, 21, 599, 1024, 33, 491,
	21, 870, 307, 33, 33, 245, 875, 446, 258, 33,
	179, 131, 244, 426, 33, 21, 1135, 1131, 389, 21,
	1133, 211, 212, 1033, 246, 405, 423, 424, 1014, 33,
	124, 225, 226, 33, 870, 425, 645, 245, 870, 66,
	1027, 1148, 410, 1027, 1027, 1152, 296, 295, 21, 291,
	1100, 96, 94, 94, 179, 875, 96, 1156, 93, 121,
	190, 1027, 33, 447, 193, 875, 1027, 1027, 67, 139,
	874, 874, 870, 173, 224, 148, 150, 1027, 102, 103,
	104, 1098, 105, 106, 107, 108, 940, 941, 101, 1022,
	806, 376, 1027, 10, 9, 555, 1027, 875, 8, 7,
	378, 1033, 62, 5, 1033, 1033, 345, 541, 346, 542,
	543, 544, 536, 396, 252, 539, 395, 394, 302, 400,
	402, 250, 1033, 253, 874, 1027, 1150, 1033, 1033, 1123,
	875, 1105, 1090, 88, 875, 316, 317, 318, 1033, 320,
	980, 61, 327, 60, 330, 331, 332, 333, 334, 335,
	336, 64, 101, 1033, 173, 342, 348, 1033, 57, 63,
	58, 1082, 836, 658, 1086, 1087, 529, 131, 875, 370,
	528, 56, 192, 874, 182, 173, 654, 396, 252, 380,
	649, 646, 1097, 874, 242, 326, 1033, 1103, 1104, 1021,
	6, 20, 19, 69, 153, 17, 595, 592, 1117, 1038,
	16, 444, 15, 326, 326, 348, 14, 11, 18, 13,
	12, 1028, 173, 1134, 429, 874, 871, 1137, 182, 102,
	103, 104, 1026, 254, 255, 256, 257, 403, 74, 401,
	869, 1059, 461, 459, 4, 2, 182, 0, 0, 173,
	0, 0, 0, 401, 0, 0, 1154, 0, 874, 0,
	398, 0, 874, 201, 210, 209, 200, 199, 202, 198,
	0, 480, 0, 482, 1077, 173, 0, 0, 1080, 0,
	0, 201, 210, 209, 200, 199, 202, 198, 0, 0,
	173, 0, 0, 102, 103, 104, 874, 254, 255, 256,
	257, 403, 0, 0, 0, 0, 0, 0, 0, 173,
	173, 0, 1111, 0, 0, 0, 326, 0, 0, 173,
	0, 0, 326, 326, 398, 380, 0, 0, 101, 520,
	372, 0, 0, 0, 0, 0, 530, 0, 0, 535,
	0, 0, 0, 83, 0, 196, 195, 0, 0, 0,
	0, 197, 205, 204, 206, 207, 208, 326, 506, 506,
	506, 0, 0, 196, 195, 0, 0, 0, 0, 197,
	205, 204, 206, 207, 208, 0, 142, 303, 299, 0,
	0, 151, 152, 0, 160, 161, 0, 0, 0, 0,
	166, 0, 401, 0, 170, 0, 174, 0, 176, 177,
	0, 0, 0, 0, 401, 0, 131, 0, 131, 131,
	0, 0, 0, 121, 0, 0, 0, 101, 201, 210,
	209, 200, 199, 202, 198, 0, 0, 0, 0, 612,
	0, 201, 210, 209, 200, 199, 202, 198, 615, 182,
	348, 227, 173, 0, 0, 0, 0, 173, 173, 173,
	201, 210, 209, 200, 199, 202, 198, 0, 730, 102,
	103, 104, 637, 105, 106, 107, 108, 0, 0, 0,
	251, 643, 251, 0, 0, 0, 0, 0, 251, 270,
	251, 0, 0, 0, 0, 101, 0, 338, 279, 251,
	281, 282, 0, 74, 0, 0, 0, 288, 0, 326,
	196, 195, 0, 0, 0, 0, 197, 205, 204, 206,
	207, 208, 182, 196, 195, 829, 0, 0, 553, 197,
	205, 204, 206, 207, 208, 0, 0, 729, 0, 0,
	0, 0, 196, 195, 401, 577, 0, 315, 197, 205,
	204, 206, 207, 208, 586, 326, 589, 512, 102, 103,
	104, 0, 105, 106, 107, 108, 0, 337, 0, 0,
	351, 0, 0, 728, 0, 0, 0, 0, 0, 173,
	173, 173, 173, 173, 371, 0, 0, 0, 0, 0,
	0, 0, 101, 744, 0, 0, 0, 0, 0, 251,
	251, 0, 0, 201, 210, 209, 200, 199, 202, 198,
	0, 0, 251, 251, 0, 0, 0, 530, 252, 351,
	0, 0, 0, 761, 173, 0, 102, 103, 104, 182,
	105, 106, 107, 108, 326, 0, 0, 436, 438, 439,
	441, 0, 0, 776, 0, 173, 0, 0, 0, 0,
	251, 0, 0, 201, 210, 209, 200, 199, 202, 198,
	0, 0, 790, 469, 0, 471, 0, 0, 0, 401,
	401, 0, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 380, 0, 0, 101, 196, 195, 0, 0, 0,
	815, 197, 205, 204, 206, 207, 208, 0, 0, 0,
	299, 0, 0, 101, 201, 210, 209, 200, 199, 202,
	198, 96, 0, 0, 0, 0, 201, 210, 209, 200,
	199, 202, 198, 102, 103, 104, 0, 254, 255, 256,
	257, 0, 0, 0, 726, 196, 195, 0, 0, 0,
	351, 197, 205, 204, 206, 207, 208, 326, 545, 968,
	0, 0, 251, 0, 0, 548, 0, 0, 0, 557,
	251, 561, 0, 0, 251, 251, 0, 0, 401, 0,
	401, 401, 401, 557, 576, 401, 0, 580, 557, 557,
	584, 0, 0, 0, 587, 576, 196, 195, 597, 906,
	0, 0, 197, 205, 204, 206, 207, 208, 196, 195,
	893, 0, 911, 0, 197, 205, 204, 206, 207, 208,
	0, 0, 747, 0, 0, 102, 103, 104, 173, 105,
	106, 107, 108, 0, 0, 0, 608, 609, 0, 0,
	576, 101, 0, 121, 102, 103, 104, 0, 105, 106,
	107, 108, 0, 0, 351, 617, 0, 0, 0, 0,
	401, 0, 401, 401, 401, 0, 396, 252, 326, 0,
	0, 0, 0, 0, 0, 326, 201, 210, 209, 200,
	199, 202, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 173, 0, 0, 375, 0, 0, 0,
	0, 846, 0, 0, 251, 0, 0, 855, 0, 0,
	675, 0, 0, 677, 0, 862, 557, 541, 864, 542,
	543, 544, 536, 842, 843, 539, 0, 0, 557, 867,
	0, 0, 401, 0, 0, 0, 557, 0, 0, 0,
	326, 0, 0, 580, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 380, 0, 0, 101, 0, 196, 195,
	0, 0, 0, 715, 197, 205, 204, 206, 207, 208,
	0, 173, 102, 103, 104, 0, 254, 255, 256, 257,
	403, 396, 252, 0, 201, 210, 209, 200, 199, 202,
	198, 0, 0, 927, 0, 0, 0, 0, 0, 0,
	121, 0, 0, 398, 0, 521, 0, 101, 0, 0,
	0, 530, 0, 0, 201, 210, 766, 200, 199, 202,
	198, 351, 0, 101, 0, 0, 951, 0, 0, 251,
	251, 549, 0, 326, 201, 613, 209, 200, 199, 202,
	198, 0, 0, 0, 0, 0, 557, 0, 396, 252,
	251, 557, 0, 0, 0, 380, 557, 0, 576, 0,
	0, 0, 557, 557, 0, 326, 196, 195, 792, 793,
	0, 0, 197, 205, 204, 206, 207, 208, 0, 0,
	0, 0, 0, 764, 101, 0, 0, 102, 103, 104,
	0, 254, 255, 256, 257, 403, 196, 195, 259, 0,
	0, 0, 197, 205, 204, 206, 207, 208, 0, 0,
	252, 0, 0, 1020, 0, 0, 196, 195, 398, 0,
	0, 0, 197, 205, 204, 206, 207, 208, 0, 0,
	0, 251, 251, 0, 0, 251, 852, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 0, 0, 0, 0,
	0, 0, 1052, 580, 102, 103, 104, 0, 254, 255,
	256, 257, 403, 0, 0, 101, 75, 76, 77, 0,
	98, 0, 93, 96, 94, 95, 22, 71, 0, 0,
	101, 35, 36, 0, 0, 398, 0, 0, 28, 0,
	0, 111, 0, 29, 44, 0, 30, 0, 0, 0,
	0, 0, 0, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 251, 102, 103, 104, 0, 105,
	106, 107, 108, 0, 0, 0, 0, 557, 0, 101,
	0, 90, 0, 0, 0, 91, 93, 0, 0, 99,
	0, 74, 0, 0, 0, 0, 0, 0, 1030, 1029,
	0, 876, 0, 0, 0, 0, 0, 32, 97, 0,
	39, 37, 38, 34, 40, 0, 0, 0, 0, 0,
	0, 0, 42, 43, 467, 468, 576, 47, 48, 49,
	50, 41, 52, 53, 54, 45, 51, 55, 0, 0,
	0, 877, 557, 0, 31, 46, 102, 103, 104, 0,
	105, 106, 107, 108, 0, 110, 84, 87, 85, 86,
	109, 102, 103, 104, 0, 105, 106, 107, 108, 0,
	0, 81, 82, 0, 0, 0, 92, 70, 101, 75,
	76, 77, 0, 98, 0, 93, 96, 94, 95, 22,
	71, 0, 0, 0, 35, 36, 0, 0, 0, 1034,
	1035, 28, 0, 0, 111, 0, 29, 44, 0, 30,
	102, 103, 104, 0, 105, 106, 107, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 0, 0, 91, 0,
	1067, 1068, 99, 0, 74, 351, 0, 0, 0, 0,
	0, 463, 462, 0, 72, 0, 0, 0, 0, 0,
	32, 97, 0, 39, 37, 38, 34, 40, 0, 0,
	0, 0, 0, 0, 0, 42, 43, 467, 468, 73,
	47, 48, 49, 50, 41, 52, 53, 54, 45, 51,
	55, 0, 0, 0, 0, 0, 0, 31, 46, 102,
	103, 104, 0, 105, 106, 107, 108, 0, 110, 84,
	87, 85, 86, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 82, 0, 0, 0, 92,
	70, 101, 75, 76, 77, 0, 98, 0, 93, 96,
	94, 95, 22, 71, 0, 0, 0, 35, 36, 0,
	0, 0, 0, 0, 28, 0, 0, 111, 0, 29,
	44, 0, 30, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 91, 0, 0, 0, 99, 0, 74, 0, 0,
	0, 0, 0, 0, 873, 872, 0, 876, 0, 0,
	0, 0, 0, 32, 97, 0, 39, 37, 38, 34,
	40, 0, 0, 0, 0, 0, 0, 0, 42, 43,
	0, 0, 0, 47, 48, 49, 50, 41, 52, 53,
	54, 45, 51, 55, 0, 0, 0, 877, 0, 0,
	31, 46, 102, 103, 104, 0, 105, 106, 107, 108,
	0, 110, 84, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 92, 70, 101, 75, 76, 77, 0, 98,
	0, 93, 96, 94, 95, 22, 71, 0, 0, 0,
	35, 36, 0, 0, 0, 0, 0, 28, 0, 0,
	111, 0, 29, 44, 0, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 91, 0, 0, 0, 99, 0,
	74, 0, 0, 0, 0, 0, 0, 24, 23, 0,
	72, 0, 0, 0, 0, 0, 32, 97, 0, 39,
	37, 38, 34, 40, 0, 0, 0, 0, 0, 0,
	0, 42, 43, 0, 0, 73, 47, 48, 49, 50,
	41, 52, 53, 54, 45, 51, 55, 0, 0, 0,
	0, 0, 0, 31, 46, 102, 103, 104, 0, 105,
	106, 107, 108, 0, 110, 84, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 82, 0, 0, 0, 92, 70, 101, 75, 76,
	77, 0, 98, 0, 93, 96, 94, 95, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 201, 0, 111, 200, 199, 202, 198, 0, 0,
	0, 0, 101, 75, 76, 77, 0, 98, 0, 93,
	96, 94, 95, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 111, 0,
	0, 0, 0, 90, 0, 0, 0, 91, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 196, 195, 0, 99, 0, 0, 197,
	205, 204, 206, 207, 208, 119, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 353, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 0, 110, 84, 354,
	85, 352, 355, 356, 357, 358, 0, 0, 0, 0,
	0, 0, 0, 81, 82, 350, 0, 0, 92, 70,
	343, 353, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 0, 110, 84, 354, 85, 352, 355, 356, 357,
	358, 0, 0, 0, 0, 0, 0, 0, 81, 82,
	350, 0, 0, 92, 70, 101, 75, 76, 77, 0,
	98, 0, 93, 96, 94, 95, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 101,
	75, 76, 77, 0, 98, 0, 93, 96, 94, 95,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 111, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 91, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 91,
	0, 0, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 116, 0, 0, 0, 0, 0, 0,
	0, 189, 97, 0, 353, 0, 102, 103, 104, 0,
	105, 106, 107, 108, 0, 110, 84, 354, 85, 352,
	355, 356, 357, 358, 0, 0, 0, 0, 0, 0,
	0, 81, 82, 0, 0, 0, 92, 70, 188, 0,
	102, 103, 104, 0, 105, 106, 107, 108, 0, 110,
	84, 87, 85, 86, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 82, 0, 0, 0,
	92, 70, 101, 75, 76, 77, 0, 98, 0, 93,
	96, 94, 95, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 101, 75, 76, 77,
	0, 98, 0, 93, 96, 94, 95, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 111, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 91, 0, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 91, 0, 0, 0,
	99, 266, 0, 0, 0, 0, 0, 0, 0, 119,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 118, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 0, 110, 84, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 82,
	350, 0, 0, 92, 70, 118, 0, 102, 103, 104,
	0, 105, 106, 107, 108, 0, 110, 84, 87, 85,
	86, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 82, 0, 0, 0, 92, 70, 101,
	75, 76, 77, 0, 98, 0, 93, 96, 94, 95,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 0, 101, 75, 76, 77, 0, 98, 0,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 91,
	0, 0, 0, 99, 0, 74, 0, 0, 0, 0,
	0, 0, 119, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 118, 0,
	102, 103, 104, 0, 105, 106, 107, 108, 0, 110,
	84, 87, 85, 86, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 82, 0, 0, 0,
	92, 70, 118, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 0, 110, 84, 87, 85, 86, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	82, 0, 0, 0, 92, 70, 101, 75, 76, 77,
	0, 98, 0, 93, 96, 94, 95, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	101, 75, 76, 77, 0, 98, 0, 93, 96, 94,
	95, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 562, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 91, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	91, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 118, 0, 102, 103, 104,
	0, 105, 106, 107, 108, 0, 110, 84, 87, 85,
	86, 109, 201, 479, 209, 200, 199, 202, 198, 0,
	0, 0, 81, 82, 0, 0, 0, 92, 114, 118,
	0, 102, 103, 104, 0, 105, 106, 107, 108, 0,
	110, 84, 87, 85, 86, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 0, 0,
	0, 92, 70, 101, 75, 301, 77, 0, 98, 0,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 196, 195, 0, 0, 0, 0,
	197, 205, 204, 206, 207, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 0, 110, 84, 87, 85, 86, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	82, 0, 0, 0, 92, 70,
}
var yyPact = [...]int{

	2720, -1000, 321, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3672, 3509, -1000, -1000, 147, 356, 1038,
	1036, 238, 2295, -1000, 569, 1139, 1140, 1760, 1760, 677,
	1760, 3509, -1000, -1000, 3509, 3509, 1779, 3509, 3509, 3509,
	3509, 3509, 3509, -1000, 1760, 1760, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 328, -1000, -1000, -1000, -1000,
	3475, -1000, 3115, 1154, 1045, -1000, -1000, -1000, -1000, -1000,
	1282, 3509, 3509, -35, 306, 299, 298, 296, -1000, 399,
	218, 3509, 3509, -1000, -1000, -1000, -1000, 1760, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 295,
	293, -48, 2720, 643, 3475, -1000, 292, 287, 285, 3509,
	669, 1282, -1000, 987, 1087, 1099, 1668, 1083, 2150, 885,
	777, -1000, 774, 3509, 1668, 1760, 1668, -1000, 777, 27,
	325, -1000, 467, -1000, 1760, 1043, 1760, 1760, 433, 431,
	-1000, 905, -1000, 1760, -1000, -1000, -1000, -1000, 3509, 3509,
	1131, 66, 897, 1003, 1129, -1000, 1128, -1000, -1000, 82,
	-35, -1000, -1000, 1612, -35, -1000, -1000, 3869, 3509, 1300,
	215, 204, 206, 209, 601, 32, 828, 1147, 285, -1000,
	-1000, -1000, 26, 1760, -1000, 3509, 3509, 3509, 784, 3509,
	889, 64, 3509, 856, 3509, 3509, 3509, 3509, 3509, 3509,
	3509, -1000, -1000, 1571, 3312, 3509, 2883, 777, 777, 64,
	64, 801, 849, -1000, -1000, 2840, -1000, 407, 777, 3509,
	1414, -1000, 2720, 204, 202, 3509, 668, 623, 620, 3509,
	956, 973, 1119, 1095, 1147, 1184, 1668, 1105, 25, -1000,
	-1000, -1000, -1000, 284, -1000, -1000, -1000, -1000, 1668, 1184,
	1124, 24, 843, 843, 843, 2918, -1000, 196, -1000, 305,
	340, 1093, 3509, 1147, 3509, 488, 336, 282, 276, -1000,
	-1000, -1000, -1000, 3509, 3509, 3509, 3509, 3509, 1082, -1000,
	-1000, 1158, 3509, 3509, 1144, 1144, 1668, 3509, 3509, 3509,
	-1000, 3509, 1282, -1000, -1000, -1000, -1000, 1119, 2394, 1760,
	1147, 1760, 71, 826, 1045, 210, 100, 61, 61, 883,
	3751, 3509, 64, 3509, -1000, 3475, -1000, 61, 64, 64,
	283, 283, -1000, -1000, -1000, 2013, 2840, -1000, -1000, 193,
	3509, 192, 768, -1000, 181, 21, 1071, -1000, 1282, -1000,
	-1000, -26, 274, 273, 272, 270, 266, 265, 264, 3509,
	3278, -1000, -1000, 64, 208, 208, 208, 784, -1000, 3509,
	1469, -1000, -1000, 600, -1000, 3509, 557, 2720, 556, 3509,
	1983, 641, 486, 464, 3509, 3509, 3081, 1095, 983, 3509,
	-1000, 17, -1000, 59, 2246, -1000, -1000, -1000, 1248, -1000,
	-1000, 2073, 263, -1000, 162, 679, 1668, 3706, 221, 1095,
	1184, 1043, 209, -1000, 209, 209, -1000, -1000, 262, 679,
	1760, 774, -1000, 520, 437, 679, 1760, 175, -1000, 1282,
	1503, 1760, 774, 172, 1760, -1000, -35, -1000, -35, -35,
	-1000, -35, -1000, -1000, 14, 1068, 1147, -1000, -1000, -1000,
	11, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 555, 320,
	-1000, -1000, 3672, 3509, -1000, -1000, -1000, -1000, -1000, 598,
	-1000, 597, 1760, 1760, -1000, 258, 1760, -1000, -1000, 3509,
	2033, -1000, 61, -1000, -1000, -1000, 169, -1000, 3509, -1000,
	2918, 1760, 3312, 777, 777, 777, 777, 3509, 3509, 3509,
	168, 166, 165, 794, -1000, 101, -1000, 249, -1000, -1000,
	497, 160, 3509, 554, 617, 2720, 3509, 746, -1000, -1000,
	1282, 3509, 2720, 1117, 530, 432, 406, -1000, 9, 962,
	1282, -1000, 983, 978, 967, 1282, 939, 936, 913, 961,
	116, -1000, -1000, -1000, -1000, -1000, 1760, 49, -1000, 1760,
	3509, 64, 679, -1000, 1119, 8, 316, -37, -1000, -10,
	7, -35, -48, 248, 679, -1000, 1095, -1000, 830, -1000,
	-1000, 830, 679, 159, 2, 158, 0, -1000, 1004, 1760,
	1013, -1000, 679, 1002, 992, -1000, -1000, -1000, 157, -1000,
	1066, 155, -1, -1000, -1000, -3, 1009, -15, 3509, 1760,
	-1000, 3509, 708, 2394, 640, 667, 2394, 2394, 596, 588,
	774, 154, 2840, 3509, -1000, 1450, -1000, -1000, 152, 3509,
	3509, 3509, 3278, 3509, 151, 150, 149, -1000, -1000, -1000,
	64, 148, -5, 3509, -1000, 769, 377, 1725, 739, 551,
	-1000, 639, -1000, 1875, 665, -1000, 3509, -1000, -1000, 411,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3081, 371, -1000,
	-1000, 978, -1000, 3509, 3509, 2089, 2022, 935, -1000, 924,
	913, -1000, 1152, 218, -6, -1000, -1000, -1000, -7, -1000,
	141, 1095, 679, 3509, -1000, 3509, 1043, 679, 139, -1000,
	138, 875, 679, 1065, 1760, -1000, -1000, -1000, 679, 679,
	137, -13, 3509, 136, 1760, 3509, 1059, 392, 1057, 1147,
	1147, 3509, 1054, 1147, -1000, -1000, -1000, -1000, -1000, 2394,
	615, 3509, 549, 548, 2394, 2394, 134, 1051, 2840, -1000,
	3509, 428, 133, 130, 129, 128, 123, 114, 426, 452,
	402, -1000, -1000, 64, 1437, -1000, 980, -1000, -1000, 738,
	2720, -1000, -1000, 3509, 432, 942, -1000, 373, -1000, 1018,
	987, 1282, -1000, 945, 218, 1932, 218, 1907, 405, 917,
	-19, 116, 3509, 869, -1000, -1000, 1282, 112, -20, 110,
	839, 833, 246, -1000, 774, -1000, -1000, -1000, 1004, 1760,
	1282, -1000, -1000, -35, -1000, 774, 2557, 391, -1000, -1000,
	-1000, 1009, -1000, 390, 108, 595, 547, 2394, 638, 703,
	702, 546, 543, -1000, 245, 1713, 244, 425, 424, 421,
	419, 418, 400, 241, 239, 367, 236, 354, -1000, 3509,
	235, -1000, 713, 411, -1000, -1000, -1000, -1000, -1000, 956,
	-1000, -1000, 3509, 234, 926, 1932, 218, 945, 218, 214,
	116, -1000, -43, -57, 64, -1000, -1000, -1000, 3509, 829,
	233, 64, -1000, 679, -1000, -1000, -1000, -1000, 542, 319,
	-1000, -1000, 3672, 3509, -1000, -1000, 3115, 3509, 2557, 2557,
	1050, 538, 612, 2394, 3509, 745, -1000, 2394, -1000, -1000,
	701, 698, 774, -1000, 430, 231, 230, 229, 227, 225,
	222, 430, 430, 416, 430, 415, 1662, 987, -1000, -1000,
	483, 1282, 1760, -1000, -1000, 926, -1000, 945, 218, -1000,
	-1000, 3509, -1000, 3509, -1000, 107, 64, -1000, 679, -1000,
	103, -1000, 2557, 637, 662, 579, 29, 819, 1147, -1000,
	536, 525, 386, 736, 524, -1000, 636, -1000, 658, -1000,
	-1000, 102, 99, -1000, 989, 965, 430, 430, 430, 430,
	430, 430, 98, 987, 81, 217, 79, 30, -1000, 74,
	1109, 70, -1000, -1000, 69, 67, -1000, -1000, 53, 825,
	-1000, 2557, 611, 3509, 2231, 1760, 1760, 31, 818, -1000,
	-1000, 2557, -1000, 725, 2394, -1000, 3509, -1000, -1000, -1000,
	950, 3509, 46, 45, 40, 39, 38, 36, -1000, -1000,
	430, -1000, 430, -1000, -1000, -1000, -1000, -1000, 823, 64,
	-1000, 582, 522, 2557, 632, 521, 156, -1000, -1000, 3672,
	3509, -1000, -1000, -1000, 574, 560, 1760, 1760, 517, -1000,
	712, 3081, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35,
	34, 64, -1000, -1000, 516, 609, 2557, 3509, 744, -1000,
	2557, 695, 2231, 629, 655, 2231, 2231, 559, 531, -1000,
	-1000, 349, -1000, -1000, -1000, 724, 514, -1000, 627, -1000,
	646, -1000, -1000, 2231, 583, 3509, 511, 510, 2231, 2231,
	-1000, 863, -1000, 721, 2557, -1000, 3509, 581, 503, 2231,
	626, 689, 688, 501, 494, -1000, 901, 765, 764, 749,
	-1000, 711, 493, 570, 2231, 3509, 742, -1000, 2231, -1000,
	-1000, 685, 684, 789, 763, -1000, 753, 748, -1000, -1000,
	-1000, -1000, 717, 492, -1000, 602, -1000, 645, -1000, -1000,
	881, -1000, -1000, -1000, -1000, -1000, 716, 2231, -1000, 3509,
	-1000, 754, -1000, -1000, 710, -1000, -1000,
}
var yyPgo = [...]int{

	0, 59, 22, 307, 198, 77, 138, 1335, 43, 27,
	38, 1334, 1333, 1332, 1330, 291, 173, 1322, 1316, 1311,
	1310, 1309, 1308, 1307, 80, 33, 36, 1306, 1302, 1301,
	65, 1300, 54, 1297, 1296, 60, 52, 1295, 1294, 1293,
	1292, 1291, 1203, 1290, 105, 83, 1102, 1284, 69, 56,
	68, 55, 26, 31, 30, 1281, 1280, 41, 1276, 34,
	21, 1272, 88, 1271, 93, 86, 62, 1039, 0, 64,
	8, 13, 9, 1270, 1266, 1263, 1262, 1083, 1260, 90,
	1259, 1258, 1251, 57, 1243, 1241, 1233, 7, 18, 16,
	10, 1232, 1231, 4, 1229, 1226, 85, 1223, 1221, 1220,
	1219, 82, 89, 87, 1217, 95, 35, 186, 1216, 37,
	1208, 1206, 1202, 17, 63, 1200, 75, 20, 67, 84,
	28, 79, 1199, 1198, 1195, 61, 1194, 1193, 32, 76,
	29, 25, 5, 12, 2, 6, 58, 1191, 19, 1190,
	11, 1189, 3, 1181, 1433, 66, 23, 14, 1169, 96,
	1139, 1168, 94, 204, 81, 74, 40, 70, 97, 1164,
	47, 767,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 43, 43,
	44, 44, 44, 44, 45, 45, 46, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	53, 54, 54, 54, 55, 55, 56, 56, 57, 57,
	57, 58, 58, 58, 59, 59, 60, 60, 61, 61,
	62, 62, 63, 63, 63, 63, 63, 64, 65, 66,
	66, 66, 66, 66, 67, 67, 67, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 69, 70, 70, 70, 71, 71,
	72, 72, 73, 73, 74, 74, 75, 75, 75, 76,
	76, 77, 78, 79, 79, 79, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 81, 81, 81, 81, 81,
	81, 81, 82, 82, 82, 82, 83, 83, 84, 84,
	84, 84, 84, 84, 84, 84, 85, 85, 85, 85,
	85, 85, 86, 86, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 88, 89, 89, 90,
	90, 91, 91, 92, 92, 92, 93, 93, 93, 94,
	94, 95, 95, 96, 96, 97, 97, 97, 97, 99,
	98, 98, 98, 98, 100, 100, 100, 100, 101, 101,
	104, 104, 105, 105, 105, 106, 106, 106, 106, 107,
	107, 107, 107, 107, 107, 107, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 109, 109, 110, 110,
	111, 111, 111, 112, 113, 113, 114, 114, 115, 115,
	116, 116, 117, 117, 118, 118, 119, 119, 102, 102,
	103, 103, 120, 120, 121, 121, 122, 122, 122, 122,
	123, 124, 125, 125, 126, 126, 126, 126, 126, 126,
	126, 126, 127, 127, 128, 128, 129, 129, 130, 130,
	131, 131, 132, 132, 133, 133, 134, 134, 135, 135,
	136, 136, 137, 137, 138, 138, 139, 139, 140, 140,
	141, 141, 142, 142, 143, 143, 144, 144, 144, 144,
	144, 144, 144, 144, 145, 146, 146, 147, 148, 148,
	149, 149, 150, 151, 152, 153, 153, 154, 154, 155,
	155, 156, 156, 157, 157, 157, 158, 158, 159, 159,
	160, 160, 161, 161,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 9, 11,
	5, 4, 4, 4, 1, 1, 3, 2, 0, 2,
	0, 2, 0, 3, 0, 2, 0, 3, 1, 6,
	5, 0, 1, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 6, 9,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 3, 1, 6, 1, 3,
	1, 3, 2, 4, 1, 1, 0, 1, 1, 1,
	1, 3, 3, 3, 1, 6, 3, 3, 3, 3,
	4, 4, 5, 6, 6, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 3,
	2, 2, 3, 3, 2, 2, 0, 1, 4, 4,
	6, 8, 3, 4, 4, 4, 5, 5, 5, 5,
	5, 1, 5, 10, 8, 9, 9, 9, 9, 9,
	9, 8, 8, 10, 8, 10, 2, 1, 5, 0,
	3, 2, 5, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 6, 6, 8, 6, 8, 6, 8, 1, 1,
	1, 1, 1, 2, 3, 1, 2, 3, 4, 1,
	2, 3, 1, 1, 1, 3, 4, 5, 6, 5,
	6, 5, 6, 7, 6, 7, 2, 4, 1, 1,
	1, 3, 1, 5, 0, 1, 4, 5, 0, 2,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 6, 9, 5, 8,
	7, 3, 1, 3, 10, 13, 9, 12, 9, 12,
	8, 11, 5, 6, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 1, 3,
	1, 3, 1, 1, 1, 0, 1, 0, 1, 0,
	1, 0, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -43, -122, -123, -126,
	-127, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 88, 87, -8, -10, -60, 27, 32,
	35, 133, 96, -147, 102, 20, 21, 100, 101, 99,
	103, 120, 111, 112, 33, 124, 134, 116, 117, 118,
	119, 125, 121, 122, 123, 126, -63, -81, -78, -77,
	-84, -85, -112, -80, -82, -145, -150, -151, -152, -39,
	166, 16, 90, 115, 80, 5, 6, 7, -64, -65,
	-67, 160, 161, -144, 145, 147, 148, 146, -86, -70,
	70, 74, 165, 11, 13, 14, 12, 97, 9, 78,
	-66, 4, 135, 136, 137, 139, 140, 141, 142, 149,
	144, 30, 158, -68, 166, -147, 88, 27, 133, 87,
	-113, -67, -68, -44, -46, 24, 19, 27, 22, -45,
	17, -77, 166, 166, 25, 36, 36, -149, 166, -148,
	-145, -149, -144, -145, 97, 44, 103, 127, -150, -152,
	-150, -144, -144, -38, 104, 105, 37, 38, 106, 107,
	-144, -144, -68, -68, -68, -152, -144, -68, -68, -68,
	-144, -68, -117, -67, -144, -68, -144, -144, 155, -67,
	-68, -117, -42, -60, -68, -145, -146, -9, 133, 96,
	6, -62, -61, -159, 31, 154, 153, 159, 77, 75,
	74, 71, 76, -161, 161, 160, 162, 163, 164, 73,
	72, -67, -67, 169, 166, 166, 166, 166, 166, 153,
	159, -154, -161, 74, -77, -67, -67, -144, 166, 166,
	169, -1, 92, -117, -83, 166, -113, -136, -114, 91,
	-52, 45, -47, -48, 25, 18, 25, -103, -101, -96,
	-98, -144, 30, -97, 139, 140, 141, 142, 25, 18,
	-102, -96, 65, 66, 67, -153, 79, -83, -117, -101,
	-144, -101, -153, 168, 155, 97, 44, 127, 128, -144,
	-96, -144, -144, 159, 43, 159, 43, 62, -144, -68,
	-68, 18, 62, 62, 43, 18, 18, 168, 62, 168,
	-68, 6, -67, 167, 167, 167, 167, -46, 94, 71,
	168, 71, -145, -146, 168, -144, -67, -67, -67, -154,
	-67, 75, 71, 76, -70, 166, -77, -67, 69, 68,
	-67, -67, -67, -67, -67, -67, -67, -144, 6, -83,
	-153, -83, -67, 167, -121, -111, -110, -69, -67, -87,
	162, -144, 148, 133, 146, 149, 150, 151, 152, -153,
	-153, -70, -70, 75, 71, 69, 68, 77, 146, -153,
	-67, -144, 6, -1, 167, 91, -137, 93, -115, 93,
	-67, -68, -53, -59, 51, 52, 48, -48, -49, 23,
	-146, -145, -119, -107, -104, -108, 29, -105, 166, -101,
	-100, -77, -99, 143, -101, 20, 168, 166, -101, -119,
	18, 168, -158, 68, -158, -158, -121, 167, 62, 166,
	166, -160, 28, 33, 34, 42, 20, -83, -149, -67,
	98, 166, 28, 166, 166, -68, -144, -68, -144, -144,
	-68, -144, -68, -30, -29, -68, 25, 5, -30, -118,
	-68, -152, -152, -101, -118, -118, -117, -68, -2, -12,
	-5, -13, 88, 87, -8, -10, -6, 113, 114, -144,
	-146, -144, 71, 71, -62, 28, 166, -64, -65, 72,
	-67, -70, -67, -70, -70, 167, -83, 167, 18, 167,
	168, 28, 166, 166, 166, 166, 166, 166, 166, 166,
	-83, -83, -69, -70, -79, 166, -77, 144, -79, -79,
	-154, -83, 168, -129, -128, 93, 89, 95, -1, 95,
	-67, 92, 92, 98, 99, -68, -68, -72, -73, -74,
	-67, -87, -49, -50, 46, -67, 60, -155, -157, 63,
	168, 55, 57, 58, 59, -144, 28, -107, -144, 28,
	166, 26, 166, -42, -125, -124, -66, -144, -103, -96,
	-68, -144, 30, 62, 166, -49, -119, -102, -45, -44,
	-45, -45, 166, -116, -66, -120, -144, -42, -24, 166,
	-144, -66, 166, -66, -144, 167, -42, -144, -120, -42,
	167, -36, -33, -35, -32, -34, -145, -144, 168, 28,
	-146, 168, 95, 158, -68, -113, 94, 94, -144, -144,
	166, -120, -67, 72, 167, -67, -121, -144, -83, -153,
	-153, -153, -153, -153, -83, -83, -83, 167, 167, 167,
	72, -71, -70, 166, 100, 71, 167, -67, 95, -129,
	-1, -68, 87, -67, -1, 19, -55, 37, 104, -56,
	-57, 53, 86, 137, -58, 86, 137, 168, -75, 49,
	50, -50, -51, 47, 48, 54, 54, -156, 56, -155,
	-157, -106, -107, 64, -105, -144, 167, -144, -68, -71,
	-116, -48, 168, 159, 167, 168, 168, 166, -116, -49,
	-116, 167, 168, 167, 168, -26, 37, 38, 39, 40,
	-25, -24, 41, -116, 43, 43, 167, 28, 167, 168,
	168, 41, 167, 168, -30, -144, -118, 90, -2, 92,
	-138, 91, -2, -2, 94, 94, -42, 167, -67, 167,
	98, 167, -83, -83, -83, -83, -69, -83, 167, 167,
	167, -70, 167, 168, -67, 81, 132, 167, 88, 95,
	92, -114, -136, 91, -68, -54, 138, 80, -72, 136,
	-51, -67, -117, -107, 64, -107, 64, 54, 54, -156,
	-105, 168, 168, 167, -49, -125, -67, -83, -96, -116,
	167, 167, 62, -116, -160, -120, -66, -66, 167, 168,
	-67, 167, -144, -144, -68, 28, 129, 28, -32, -35,
	-35, -145, -68, 28, -36, -2, -139, 93, -68, 95,
	95, -2, -2, 167, 28, -67, 110, 167, 167, 167,
	167, 167, 167, 110, 110, 131, 110, 131, -71, 168,
	46, 88, -1, -57, -59, 135, -76, 37, 38, -52,
	-105, -109, 61, 62, -105, -107, 64, -107, 64, 54,
	168, -106, -144, -68, 26, -42, 167, 167, 168, 167,
	62, 26, -42, 166, -42, -26, -25, -42, -3, -14,
	-5, -18, 88, 87, -15, -16, 90, 130, 129, 129,
	167, -131, -130, 93, 89, 95, -2, 92, 90, 90,
	95, 95, 166, 167, 166, 110, 110, 110, 110, 110,
	110, 166, 166, 136, 166, 136, -67, 166, -128, -54,
	-53, -67, 166, -109, -109, -105, -105, -107, 64, -106,
	167, 168, 167, 168, -71, -83, 26, -42, 166, -71,
	-116, 95, 158, -68, -113, -68, -145, -146, -9, -68,
	-3, -3, 28, 95, -131, -2, -68, 87, -2, 90,
	90, -42, -89, -88, -90, 109, 166, 166, 166, 166,
	166, 166, -88, -90, -89, 110, -88, 110, 167, -52,
	98, -120, -109, -105, -83, -83, 167, -71, -116, 167,
	-3, 92, -140, 91, 94, 71, 71, -145, -146, 95,
	95, 129, 88, 95, 92, -138, 91, 167, 167, -52,
	45, 48, -89, -89, -89, -89, -89, -88, 167, 167,
	166, 167, 166, 167, 19, 167, 167, 167, 167, 26,
	-42, -3, -141, 93, -68, -4, -17, -5, -19, 88,
	87, -15, -16, -6, -144, -144, 71, 71, -3, 88,
	-2, 48, -117, 167, 167, 167, 167, 167, 167, -89,
	-88, 26, -42, -71, -133, -132, 93, 89, 95, -3,
	92, 95, 158, -68, -113, 94, 94, -144, -144, 95,
	-130, -72, 167, 167, -71, 95, -133, -3, -68, 87,
	-3, 90, -4, 92, -142, 91, -4, -4, 94, 94,
	-91, 137, 88, 95, 92, -140, 91, -4, -143, 93,
	-68, 95, 95, -4, -4, -92, 75, 82, 6, 85,
	88, -3, -135, -134, 93, 89, 95, -4, 92, 90,
	90, 95, 95, -94, 82, -93, 6, 85, 83, 83,
	86, -132, 95, -135, -4, -68, 87, -4, 90, 90,
	72, 83, 83, 84, 86, 88, 95, 92, -142, 91,
	-95, 82, -93, 88, -4, 84, -134,
}
var yyDef = [...]int{

	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 404, 46, 47, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 139,
	0, 0, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 171, 0, 0, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 248, 249, 250, 251,
	216, 253, 0, 39, 508, 222, 223, 224, 225, 226,
	0, 0, 0, 229, 0, 0, 0, 0, 321, 497,
	0, 0, 0, 484, 492, 493, 494, 0, 227, 228,
	234, 476, 477, 478, 479, 480, 481, 482, 483, 0,
	0, 0, -2, 235, -2, 247, 0, 0, 0, 404,
	0, 405, 235, -2, 188, 0, 0, 0, 0, 0,
	495, 185, 216, 306, 0, 0, 0, 76, 495, 490,
	488, 77, 0, 79, 0, 0, 0, 0, 0, 0,
	84, 108, 110, 0, 140, 141, 142, 143, 0, 0,
	0, -2, -2, 235, 235, 155, 167, -2, -2, -2,
	-2, -2, 166, 412, -2, -2, 172, 173, 0, 0,
	235, 0, 0, 0, 235, 246, 0, 0, 37, 38,
	40, 217, 220, 0, 509, 0, 512, 513, 497, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 0, 306, 306, 0, 495, 495, 512,
	513, 0, 0, 498, 294, 304, 305, 0, 495, 0,
	0, 3, -2, 0, 0, 306, 0, 462, 408, 0,
	214, 0, 188, 190, 0, 0, 0, 0, 420, 368,
	369, 353, 354, 0, -2, -2, -2, -2, 0, 0,
	0, 418, 506, 506, 506, 0, 496, 0, 307, 0,
	510, 0, 306, 0, 0, 0, 0, 0, 0, 111,
	116, 124, 138, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 223, 487, 236, 252, 255, 271, 188, -2, 0,
	0, 0, 0, 0, 508, 0, 272, -2, -2, 0,
	0, 0, 0, 0, 285, 216, 256, -2, 0, 0,
	295, 296, 297, 298, 299, 302, 303, 230, 232, 0,
	306, 0, 412, 312, 0, 424, 400, 402, 398, 399,
	254, 229, 0, 0, 0, 0, 0, 0, 0, 306,
	306, 277, 279, 0, 0, 0, 0, 497, 148, 306,
	0, 231, 233, 446, 314, 0, 0, -2, 0, 0,
	0, 235, 176, 198, 0, 0, 0, 190, 192, 0,
	187, 485, 189, -2, 379, 382, 383, 384, 216, 370,
	371, 372, 0, 359, 216, 0, 0, 0, 0, 190,
	0, 0, 0, 507, 0, 0, 186, 315, 0, 0,
	0, 216, 511, 0, 0, 0, 0, 0, 491, 489,
	216, 0, 216, 0, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, 109, 119, -2, 0, 121, 123, 164,
	-2, 153, 154, 168, 159, 160, 413, -2, 0, 0,
	41, 42, 0, 404, 51, 52, 53, 28, 29, 0,
	486, 0, 0, 0, 221, 0, 0, 280, 281, 0,
	0, 286, -2, 290, 292, 308, 0, 309, 0, 313,
	0, 0, 306, 495, 495, 495, 495, 306, 306, 306,
	0, 0, 0, 0, 287, 216, 274, 0, 291, 293,
	0, 0, 0, 0, 446, -2, 0, 0, 463, 403,
	409, 0, -2, 0, 0, -2, -2, 197, 260, 266,
	264, 265, 192, 194, 0, 191, 0, 0, 501, 499,
	0, 500, 503, 504, 505, 380, 0, 499, 373, 0,
	0, 0, 0, 428, 188, 432, 0, 229, 421, 0,
	235, -2, 354, 0, 0, 442, 190, 419, 181, 184,
	182, 183, 0, 0, 410, 0, 422, 89, 101, 0,
	97, 92, 0, 0, 0, 318, 106, 107, 0, 115,
	0, 0, 131, 132, 126, 129, 125, 0, 0, 0,
	112, 0, 0, -2, 235, 0, -2, -2, 0, 0,
	216, 0, 282, 0, 316, 0, 425, 401, 0, 306,
	306, 306, 306, 306, 0, 0, 0, 317, 319, 320,
	0, 0, 258, 0, 146, 0, 322, 0, 0, 0,
	447, 235, 45, 406, 460, 177, 0, 204, 205, 201,
	207, 208, 209, 210, 215, 212, 213, 0, 262, 267,
	268, 194, 180, 0, 0, 0, 0, 0, 502, 0,
	501, 417, -2, 0, 384, 381, 385, 374, 235, 426,
	0, 190, 0, 0, 360, 306, 0, 0, 0, 443,
	0, 0, 0, -2, 0, 90, 102, 103, 0, 0,
	0, 99, 0, 0, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 120, 118, 415, 32, 5, -2,
	466, 0, 0, 0, -2, -2, 0, 0, 283, 310,
	0, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 273, 0, 0, 147, 0, 257, 43, 0,
	-2, 407, 461, 0, 235, 214, 202, 0, 261, 0,
	196, 195, 193, 386, 0, 499, 0, 0, 0, 0,
	376, 0, 0, 216, 430, 433, 431, 0, 0, 0,
	0, 216, 0, 411, 216, 423, 104, 105, 101, 0,
	98, 93, 94, -2, -2, 216, -2, 0, 127, 133,
	130, 0, -2, 0, 0, 450, 0, -2, 235, 0,
	0, 0, 0, 218, 0, 0, 0, 316, 317, 318,
	319, 320, 322, 0, 0, 0, 0, 0, 259, 0,
	0, 44, 444, 201, 200, 203, 263, 269, 270, 214,
	391, 387, 0, 0, 0, 499, 0, 389, 0, 0,
	0, 377, 229, 235, 0, 429, 361, 362, 306, 216,
	0, 0, 440, 0, 88, 91, 100, 114, 0, 0,
	54, 55, 0, 404, 68, 69, 0, 61, -2, -2,
	0, 0, 450, -2, 0, 0, 467, -2, 33, 34,
	0, 0, 216, 311, 339, 0, 0, 0, 0, 0,
	0, 339, 339, 0, 339, 0, 0, 196, 445, 199,
	178, 396, 0, 392, 388, 0, 394, 390, 0, 378,
	364, 306, 366, 306, 427, 0, 0, 436, 0, 438,
	0, 134, -2, 235, 0, 235, 246, 0, 0, -2,
	0, 0, 0, 0, 0, 451, 235, 50, 464, 35,
	36, 0, 0, 337, 196, 0, 339, 339, 339, 339,
	339, 339, 0, 196, 0, 0, 0, 0, 275, 0,
	0, 0, 393, 395, 0, 0, 363, 434, 0, 216,
	7, -2, 470, 0, -2, 0, 0, 0, 0, 135,
	136, -2, 48, 0, -2, 465, 0, 219, 324, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 332,
	339, 334, 339, 323, 179, 397, 365, 367, 216, 0,
	441, 454, 0, -2, 235, 0, 0, 63, 64, 0,
	404, 73, 74, 75, 0, 0, 0, 0, 0, 49,
	448, 0, 340, 325, 326, 327, 328, 329, 330, 0,
	0, 0, 437, 439, 0, 454, -2, 0, 0, 471,
	-2, 0, -2, 235, 0, -2, -2, 0, 0, 137,
	449, 197, 333, 335, 435, 0, 0, 455, 235, 67,
	468, 56, 9, -2, 474, 0, 0, 0, -2, -2,
	338, 0, 65, 0, -2, 469, 0, 458, 0, -2,
	235, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	66, 452, 0, 458, -2, 0, 0, 475, -2, 57,
	58, 0, 0, 0, 0, 350, 0, 0, 343, 344,
	345, 453, 0, 0, 459, 235, 72, 472, 59, 60,
	0, 349, 346, 347, 348, 70, 0, -2, 473, 0,
	342, 0, 352, 71, 456, 351, 457,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 165, 3, 3, 3, 164, 3, 3,
	166, 167, 162, 161, 168, 160, 169, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 158,
	3, 159,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:256
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:261
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:268
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:272
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:278
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:282
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:288
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:292
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:302
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:314
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:322
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:326
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:330
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:334
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:338
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:342
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:346
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:350
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:354
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:358
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:362
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:372
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:376
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:382
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:386
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:392
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:396
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:400
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:404
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:408
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:414
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:418
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:424
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:428
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:434
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:438
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:444
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:448
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:452
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:456
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:460
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:466
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:470
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:474
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:478
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:482
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:492
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:496
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:502
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:506
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:510
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:514
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:518
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:524
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:534
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:538
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:544
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:548
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:552
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:556
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:560
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:566
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:570
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:574
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:578
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:582
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:586
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:592
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:596
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:600
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:604
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:610
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:614
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:618
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:622
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:626
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:632
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:636
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:642
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:646
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:650
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:654
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:658
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:662
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:666
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:670
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:674
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:678
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:684
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:688
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:694
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:698
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:704
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:708
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:712
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:716
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:720
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:726
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:730
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:734
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:738
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:742
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:746
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:750
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:756
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:760
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:764
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:768
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:774
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:778
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:784
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:788
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:794
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:798
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:802
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:806
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:812
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:818
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:822
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:828
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:834
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:838
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:844
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:848
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:852
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:858
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:862
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:866
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:870
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:874
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:880
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:884
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:888
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:892
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:896
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:900
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:904
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:910
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:914
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:918
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:924
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:928
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:932
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:936
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:940
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:944
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:948
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:952
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:956
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:960
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:964
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:968
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:972
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:976
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:980
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:984
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:988
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:992
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:996
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1045
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1057
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:1073
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1111
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1135
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1141
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1147
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexpr = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1157
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexpr = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1167
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1177
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1187
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1197
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1203
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 199:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1211
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1221
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.token = Token{}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1231
		{
			yyVAL.token = yyDollar[1].token
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1235
		{
			yyVAL.token = yyDollar[2].token
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1241
		{
			yyVAL.token = yyDollar[1].token
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1245
		{
			yyVAL.token = yyDollar[1].token
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1251
		{
			yyVAL.token = Token{}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1255
		{
			yyVAL.token = yyDollar[1].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1275
		{
			yyVAL.token = Token{}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1279
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1283
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = nil
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1299
		{
			yyVAL.queryexpr = nil
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1303
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 219:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1319
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1351
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1357
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1423
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1427
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1431
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1439
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1443
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1447
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1459
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1463
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1493
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1497
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1503
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1507
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1513
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1517
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1523
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1533
		{
			yyVAL.token = Token{}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1537
		{
			yyVAL.token = yyDollar[1].token
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1541
		{
			yyVAL.token = yyDollar[1].token
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.token = yyDollar[1].token
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1551
		{
			yyVAL.token = yyDollar[1].token
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1557
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1563
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1600
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 284:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1698
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1712
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexprs = nil
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1736
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 311:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1771
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1775
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1779
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1783
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1787
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1791
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1797
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1801
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1807
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 325:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1811
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 326:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1815
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 327:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1819
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 328:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1823
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1827
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1831
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1835
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1839
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1843
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1847
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1851
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1857
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1863
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1867
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1873
		{
			yyVAL.queryexpr = nil
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1877
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1883
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1887
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1893
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1897
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1908
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1913
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1918
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1928
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1938
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1948
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.token = yyDollar[1].token
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.token = yyDollar[1].token
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.token = yyDollar[1].token
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.token = yyDollar[1].token
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1978
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 361:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1982
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 362:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 363:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1996
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 365:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2000
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2004
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 367:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2008
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2014
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2018
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2024
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2028
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2034
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2038
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2048
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2052
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2058
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2062
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2070
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2074
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2100
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2104
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 388:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2108
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2112
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2120
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2126
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2132
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2138
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 395:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2144
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2152
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2156
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2162
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2166
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2172
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2176
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2180
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2186
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2192
		{
			yyVAL.queryexpr = nil
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2196
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2202
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2206
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2212
		{
			yyVAL.queryexpr = nil
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2216
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2222
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2226
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2232
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2236
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2242
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2246
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2252
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2256
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2262
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2266
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2272
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2276
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2282
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2286
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2292
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2296
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 426:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2302
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 427:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2306
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2310
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2314
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2320
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2326
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2332
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2336
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 434:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:2342
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 435:
		yyDollar = yyS[yypt-13 : yypt+1]
		//line parser.y:2346
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 436:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2350
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 437:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2354
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 438:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2358
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 439:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2362
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 440:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2366
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 441:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:2370
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2376
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 443:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2380
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2386
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2390
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2396
		{
			yyVAL.elseexpr = Else{}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2400
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2406
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2410
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2416
		{
			yyVAL.elseexpr = Else{}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2420
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2426
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2430
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2436
		{
			yyVAL.elseexpr = Else{}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2440
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2446
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2450
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2456
		{
			yyVAL.elseexpr = Else{}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2460
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2466
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2470
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2476
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2480
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2486
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2490
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2496
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2500
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2506
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2510
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2516
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2520
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2526
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2530
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2536
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2540
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2546
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2550
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2554
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2558
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2562
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2566
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2570
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2574
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2580
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2586
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2590
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2596
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2602
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2606
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2612
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2616
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2622
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2628
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2634
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2640
		{
			yyVAL.token = Token{}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2644
		{
			yyVAL.token = yyDollar[1].token
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2650
		{
			yyVAL.token = Token{}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2654
		{
			yyVAL.token = yyDollar[1].token
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2660
		{
			yyVAL.token = Token{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2664
		{
			yyVAL.token = yyDollar[1].token
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2670
		{
			yyVAL.token = Token{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2674
		{
			yyVAL.token = yyDollar[1].token
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2680
		{
			yyVAL.token = yyDollar[1].token
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2684
		{
			yyVAL.token = yyDollar[1].token
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2688
		{
			yyVAL.token = yyDollar[1].token
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2694
		{
			yyVAL.token = Token{}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2698
		{
			yyVAL.token = yyDollar[1].token
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2704
		{
			yyVAL.token = Token{}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2708
		{
			yyVAL.token = yyDollar[1].token
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2714
		{
			yyVAL.token = Token{}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2718
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2724
		{
			yyVAL.token = yyDollar[1].token
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2728
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
